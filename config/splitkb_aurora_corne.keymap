/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>



/*****************************************************************************/
                            /* Home Row Mods */
/*****************************************************************************/

/* Left hand key positions for use with right hand mods */
#define LEFT_HAND_KEYS \
    /*    ┌────┬────┬────┬────┬────┐                                       */ \
            0    1    2    3    4     5                                       \
    /*    ├────┼────┼────┼────┼────┼────┐                                  */ \
            12   13   14   15   16   17                                      \
    /*    ├────┼────┼────┼────┼────┼────┤                                  */ \
            24   25   26   27   28   29                                       \
    /*    ├────┼────┼────┼────┼────┼────┤                                  */ \
  

/* Right hand key positions for use with left hand mods */
#define RIGHT_HAND_KEYS \
    /*                                          ┌────┬────┬────┬────┬────┐ */ \
                                             6     7    8    9   10   11      \
    /*                                     ┌────┼────┼────┼────┼────┼────┤ */ \
                                             18   19   20   21   22   23      \
    /*                                     ├────┼────┼────┼────┼────┼────┤ */ \
                                             30   31   32   33   34   35      \
    /*                                     ├────┼────┼────┼────┼────┼────┤ */ \
    

/* Thumb key positions for use with mods on both hands */
#define THUMB_KEYS \
    /*                 ┌────┬────┬────┐      ┌────┬────┬────┐              */ \
                         36   37   38          39   40   41                   \
    /*                 ├────┼────┼────┤      ├────┼────┼────┤              */ \


/ {

 behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        lh_hm: left_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };  
        rh_hm: right_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
            
        };
        questionstrophe: questionstrophe {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTIONSTROPHE";
            #binding-cells = <0>;
            bindings = <&kp O>, <&question_end_sentence>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
        excumflex: excumflex {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCUMFLEX";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&excl_end_sentence>;
            mods = <(MOD_LSFT)>;
        };
        dotone: dot_one {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_ONE";
            #binding-cells = <0>;
            bindings = <&dot_end_sentence>, <&dottwo>;
            mods = <(MOD_LSFT|MOD_RALT)>;
        };
        dottwo: dot_two {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_TWO";
            #binding-cells = <0>;
            bindings = <&kp RA(V)>, <&ellips>;
            mods = <(MOD_LSFT)>;
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            label = "OPTIMOT";
           
            // -----------------------------------------------------------------------------------------
            // |  TAB |  à  |  J  |  O  |  é  |  B  |   |  F  |  D  |  L  |  ’  |  Q  | BKSP |
            // | CTRL |  A  |  I  |  E  |  U  |  ,  |   |  P  |  T  |  S  |  R  |  N  |  !   |
            // | SHFT |     |  Y  |  è  |  .  |  k  |   |  G  |  C  |  M  |  H  |  V  |  Z   |
            // 
            
            bindings = <
&kp TAB     &kp N0  &kp J  &kp O    &kp N2     &kp B        &kp F   &kp D          &kp L       &questionstrophe  &kp R  &kp Q
&kp LCTRL   &kp A   &kp I  &kp E    &kp U      &trans       &kp P   &kp T          &kp S       &kp R             &kp N  &excumflex
&kp LSHFT   &kp Y   &kp Y  &dotone  &dotone      &kp K       &kp G   &kp C         &kp COMMA   &kp H             &kp V  &kp Z
                       &kp CAPS &mo 1 &mo 2 &kp SPACE  &kp BSPC &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        qwerty_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp A  &kp Z  &kp E     &kp R  &kp T        &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp Q  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J      &kp K      &kp L    &kp M     &kp SQT
&kp LSHFT  &kp W  &kp X  &kp C     &kp V  &kp B        &kp N    &kp COMMA  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2      &kp RALT
            >;
        };

    };
};
